#--------------------
# HTTP
server.port=8085
#--------------------

#------------------------------------
# HTTPS - SSL
#--> server.ssl.key-store=file:cert.p12
#--> server.ssl.key-store-password=p@ssw0rd

# JKS or PKCS12
#--> server.ssl.keyStoreType=PKCS12

#-------------------------------------------------------
# para habilitar SSL quitar los 5 comentarios que siguen
#-------------------------------------------------------
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store=classpath:keystore/dev.transformapp.cl.p12
# server.ssl.key-store-password=p@ssw0rd
# server.ssl.key-alias=billonapicert
# server.ssl.enabled-protocols=TLSv1.2,TLSv1.3
#-------------------------------------

# Desarrollo
# spring.profiles.active=dev
# Produccion
# spring.profiles.active=cert
spring.profiles.active=@spring.profiles.active@

# Only repositories annotated with @(Repository)RestResource are exposed, unless their exported flag is set to false.
spring.data.rest.detection-strategy=annotated

#------------------------------------
# Nivel de log de FAPP
#------------------------------------
logging.level.cl.fapp=DEBUG
#logging.level.org.jcp.xml.dsig=DEBUG

# loglevel del httpclient utilizado por webclient en cliente rest del sii para boletas
logging.level.reactor.netty.http.client.HttpClient=info
logging.level.org.apache.http=INFO
logging.level.httpclient.wire=INFO

#server.servlet.context-path=/prueba
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# multipart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=128KB
spring.servlet.multipart.max-request-size=128KB

#---------------------------------------------
# FRESHDESK
#---------------------------------------------
freshdesk.api.url=https://billonapp.freshdesk.com/api/v2/tickets
freshdesk.api.key=

freshdesk.ticket.folios.groupid=153000047593
freshdesk.ticket.folios.responderid=153000716188

freshdesk.ticket.certificados.groupid=153000047593
freshdesk.ticket.certificados.responderid=153000716188

#---------------------------------------------
# ACTUATOR
#---------------------------------------------
# Use "*" to expose all endpoints, or a comma-separated list to expose selected ones
management.endpoints.web.exposure.include=auditevents,info,health,metrics,loggers,httptrace,env,shutdown,mappings,scheduledtasks,threaddump,heapdump,prometheus
management.endpoint.health.show-details=always

#---------------------------------------------
# propias de FAPP
#---------------------------------------------
fapp.api.controller.base-path=/fapp/sii/docs/v1
fapp.api.controller.repo.base-path=/fapp/v1

#---------------------------------------------
# FAPP: TASK
#---------------------------------------------
# cron expression para cada tarea
fapp.task.monitor.folios.cron=0 3 * ? * *
fapp.task.monitor.certificados.cron=0 8 1 ? * SUN
fapp.task.setboletas.creator.cron=0 */20 * ? * *
fapp.task.setboletas.sender.cron=0 6 * ? * *

# opciones particulares para tarea setboletas.creator
fapp.task.setboletas.partition.size=30
fapp.task.setboletas.group.remainder=true


# dias anteriores a la expiracion del certificado
fapp.task.monitor.cert-expiry-days=30

# numero de folios disponibles a partir de los cuales se alerta falta de folios
fapp.task.monitor.min-folio=20

# jpa
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.jpa.properties.hibernate.format_sql=false

## Database connection pooling properties
# Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.max-wait=10000
spring.datasource.tomcat.max-wait=10000


# Maximum number of active connections that can be allocated from this pool at the same time.
#spring.datasource.tomcat.max-active=10
#spring.datasource.tomcat.max-idle=5
#spring.datasource.tomcat.min-idle=3

#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=3

#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout = 10000 

#maximum pool size
spring.datasource.hikari.maximum-pool-size= 10
 
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000

 # maximum lifetime in milliseconds of a connection in the pool after it is closed. 
spring.datasource.hikari.max-lifetime= 35000

 #default auto-commit behavior
spring.datasource.hikari.auto-commit =true

#-----------------------------------
# keycloak
#-----------------------------------
keycloak.realm=fapp-emisores
keycloak.auth-server-url=http://${KEYCLOAK_HOST:localhost}:${KEYCLOAK_PORT:8080}
keycloak.resource=fapp-services
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true

#-----------------------------------
# JWT Configurations
#-----------------------------------
jwt.secret=vPLWiWxK6+2BcxoU7gBkHArWFuEoYTMAbB6womLAuE7U0hHp2Q5ZKLjlXYbE/S3lr4FQr5v6zAWEJJ7oPw27xA==
# 1 days
jwt.expiration=86400
jwt.username=B;CuR%D)[lwMUbT
jwt.pwd=4UKNps5m}v,]e@I

spring.output.ansi.enabled=always

decrypt.secretKey=d211a37ea68dc8ce416f614b114365fdf73fc62f6bb5af6e4b517453e78d08a4
decrypt.password=K7@p9Lw!jR3#xQs7Zf8H
decrypt.salt=wJdR3y5kjvP0sDd8V/ht7w==

# para deshabilitar la compresion y http2
server.compression.enabled=false
server.http2.enabled=false